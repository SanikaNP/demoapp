.container {
  padding: 20px;
}

.create-button,
.save-button {
  margin-bottom: 10px;
  padding: 10px 20px;
  background-color: #4caf50;
  color: white;
  border: none;
  cursor: pointer;
}

.create-button:hover,
.save-button:hover {
  background-color: #45a049;
}

.spreadsheet-container {
  display: flex;
}

.saved-list {
  margin-right: 20px;
  width: 200px;
  background-color: #f9f9f9;
  padding: 10px;
  border: 1px solid #ddd;
  border-radius: 4px;
}

.saved-list h3 {
  margin: 0 0 10px 0;
}

.saved-item {
  cursor: pointer;
  padding: 5px;
}

.saved-item:hover {
  background-color: #f0f0f0;
}

.grid-section {
  flex-grow: 1;
}





<button (click)="createSpreadsheet()">Create Spreadsheet</button>
<button (click)="saveSpreadsheet()">Save Spreadsheet</button>

<ag-grid-angular
  style="width: 100%; height: 400px;"
  class="ag-theme-alpine"
  [rowData]="rowData"
  [columnDefs]="columnDefs"
  
  (gridReady)="onGridReady($event)"
></ag-grid-angular>

<h3>Saved Spreadsheets:</h3>
<ul>
  <li *ngFor="let spreadsheet of savedSpreadsheets">
    {{ spreadsheet.name }}
  </li>
</ul>






import { Component, OnInit } from '@angular/core';
import { ModuleRegistry, GridApi, GridOptions } from '@ag-grid-community/core';
import { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';


// Register the module
ModuleRegistry.registerModules([ClientSideRowModelModule]);

@Component({
  selector: 'app-spreadsheet',
  templateUrl: './spreadsheet.component.html',
  styleUrls: ['./spreadsheet.component.css']
})
export class SpreadsheetComponent implements OnInit {
  gridApi: GridApi | undefined;
  spreadsheetName: string = '';
  savedSpreadsheets: any[] = [];

  rowData: any[] = [];
  columnDefs = [
    { headerName: 'Column 1', field: 'col1', editable: true },
    { headerName: 'Column 2', field: 'col2', editable: true },
    { headerName: 'Column 3', field: 'col3', editable: true },
    { headerName: 'Column 4', field: 'col4', editable: true },
    { headerName: 'Column 5', field: 'col5', editable: true }
  ];
  
  ngOnInit() {}

  onGridReady(params: { api: GridApi }) {
    this.gridApi = params.api; // Assign grid API
  }

  createSpreadsheet() {
    this.rowData = [
      { col1: '', col2: '', col3: '', col4: '', col5: '' },
      { col1: '', col2: '', col3: '', col4: '', col5: '' },
      { col1: '', col2: '', col3: '', col4: '', col5: '' },
      { col1: '', col2: '', col3: '', col4: '', col5: '' },
      { col1: '', col2: '', col3: '', col4: '', col5: '' }
    ];
  }

  saveSpreadsheet() {
    if (!this.gridApi) {
      alert('Grid is not initialized yet. Please try again.');
      return;
    }

    if (this.spreadsheetName) {
      const rowData: any[] = [];
      this.gridApi.forEachNode((node) => rowData.push(node.data));
      this.savedSpreadsheets.push({
        name: this.spreadsheetName,
        data: rowData,
      });
      alert(`Spreadsheet "${this.spreadsheetName}" saved successfully.`);
    } else {
      alert('No spreadsheet is open to save.');
    }
  }
}
